     @inject IJSRuntime js
@inject IRepositorio repositorio
@inject SweetAlertService swal


     <div style="display:flex; flex-wrap:wrap; align-items: center;" >
      <ListadoGenerico Listado="Peliculas">
      <HayRegistros>
        <PeliculaIndividual Pelicula="context"
                                EliminarPelicula="EliminarPelicula" @key="context.Id"></PeliculaIndividual>
      </HayRegistros>
     </ListadoGenerico>
     </div>
 

    
    @code{
        [Parameter]
        [EditorRequired]
        public List<Pelicula> Peliculas{get; set;}= null!;

      
      private async Task EliminarPelicula(Pelicula pelicula){
        var confirmado = await js.Confirm($"Desea borrar la pelicula {pelicula.Titulo}?" );
        
        if(confirmado){
        {
            var respuestaHTTP = await repositorio.Delete($"api/peliculas/{pelicula.Id}");

                if (respuestaHTTP.Error)
                {
                    
                        var mensajeError = await respuestaHTTP.ObtenerMensajeError();
                        await swal.FireAsync("Error", mensajeError, SweetAlertIcon.Error);
                    
                }else
                {
                    Peliculas.Remove(pelicula);
                }
                       
       }
      }
  
    }

    }
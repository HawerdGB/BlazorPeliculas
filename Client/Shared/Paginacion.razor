<nav>
    <ul class="pagination justify-content-center">
        
        @foreach(var enlace in Enlaces)
        { <li
        @onclick=@(() => PaginaSeleccionadaInterno(enlace))
            style="cursor:pointer"
            class="page-item @(enlace.Habilitada ? null : "disabled")
             @(enlace.Activa ? "active" : null)">
            <a class="page-link">@enlace.Texto</a></li>
        }
            
    </ul>
</nav>
@code {
    [Parameter] public int PaginaActual { get; set; } = 1;
    [Parameter] public int PaginasTotales { get; set; }
    [Parameter] public int Radio { get; set; } = 3;
    [Parameter] public EventCallback<int> PaginaSeleccionada { get; set; }
    List<PaginasModel> Enlaces = new List<PaginasModel>();


    private async Task PaginaSeleccionadaInterno(PaginasModel enlace)
    {
        if (enlace.Pagina == PaginaActual || !enlace.Habilitada)
        {
            return;
        }
        PaginaActual = enlace.Pagina;
        await PaginaSeleccionada.InvokeAsync(enlace.Pagina);
    }


    protected override void OnParametersSet()
    {
        Enlaces = new List<PaginasModel>();

        var enlaceAnteriorHabilitada = PaginaActual > 1;
        var enlaceAnteriorPagina = PaginaActual - 1;
        Enlaces.Add(new PaginasModel() { Texto = "Anterior", Pagina = enlaceAnteriorPagina, Habilitada = enlaceAnteriorHabilitada });
        for (int i = 1; i <= PaginasTotales; i++)
        {
            if (i >= PaginaActual - Radio && i <= PaginaActual + Radio)
            {
                Enlaces.Add(new PaginasModel() { Texto = i.ToString(), Pagina = i, Activa = i == PaginaActual });
            }
        }

        var enlaceSiguienteHabilitada = PaginaActual < PaginasTotales;
        var enlaceSiguientePagina = PaginaActual + 1;
        Enlaces.Add(new PaginasModel() { Texto = "Siguiente", Pagina = enlaceSiguientePagina, Habilitada = enlaceSiguienteHabilitada });
    }

    class PaginasModel
    {
        public string Texto { get; set; } = null!;
        public int Pagina { get; set; }
        public bool Activa { get; set; } = false;
        public bool Habilitada { get; set; } = true;
    }

}
